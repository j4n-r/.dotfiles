"use strict";var g=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var E=Object.getOwnPropertyNames;var v=Object.prototype.hasOwnProperty;var D=(n,e)=>{for(var t in e)g(n,t,{get:e[t],enumerable:!0})},V=(n,e,t,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of E(e))!v.call(n,i)&&i!==t&&g(n,i,{get:()=>e[i],enumerable:!(s=x(e,i))||s.enumerable});return n};var A=n=>V(g({},"__esModule",{value:!0}),n);var _={};D(_,{default:()=>O});module.exports=A(_);var o=require("@raycast/api");var h="0123456789abcdef",y=class n{constructor(e){this.bytes=e}static ofInner(e){if(e.length!==16)throw new TypeError("not 128-bit length");return new n(e)}static fromFieldsV7(e,t,s,i){if(!Number.isInteger(e)||!Number.isInteger(t)||!Number.isInteger(s)||!Number.isInteger(i)||e<0||t<0||s<0||i<0||e>0xffffffffffff||t>4095||s>1073741823||i>4294967295)throw new RangeError("invalid field value");let r=new Uint8Array(16);return r[0]=e/2**40,r[1]=e/2**32,r[2]=e/2**24,r[3]=e/2**16,r[4]=e/2**8,r[5]=e,r[6]=112|t>>>8,r[7]=t,r[8]=128|s>>>24,r[9]=s>>>16,r[10]=s>>>8,r[11]=s,r[12]=i>>>24,r[13]=i>>>16,r[14]=i>>>8,r[15]=i,new n(r)}static parse(e){var t,s,i,r;let a;switch(e.length){case 32:a=(t=/^[0-9a-f]{32}$/i.exec(e))===null||t===void 0?void 0:t[0];break;case 36:a=(s=/^([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{12})$/i.exec(e))===null||s===void 0?void 0:s.slice(1,6).join("");break;case 38:a=(i=/^\{([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{12})\}$/i.exec(e))===null||i===void 0?void 0:i.slice(1,6).join("");break;case 45:a=(r=/^urn:uuid:([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{12})$/i.exec(e))===null||r===void 0?void 0:r.slice(1,6).join("");break;default:break}if(a){let c=new Uint8Array(16);for(let u=0;u<16;u+=4){let f=parseInt(a.substring(2*u,2*u+8),16);c[u+0]=f>>>24,c[u+1]=f>>>16,c[u+2]=f>>>8,c[u+3]=f}return new n(c)}else throw new SyntaxError("could not parse UUID string")}toString(){let e="";for(let t=0;t<this.bytes.length;t++)e+=h.charAt(this.bytes[t]>>>4),e+=h.charAt(this.bytes[t]&15),(t===3||t===5||t===7||t===9)&&(e+="-");return e}toHex(){let e="";for(let t=0;t<this.bytes.length;t++)e+=h.charAt(this.bytes[t]>>>4),e+=h.charAt(this.bytes[t]&15);return e}toJSON(){return this.toString()}getVariant(){let e=this.bytes[8]>>>4;if(e<0)throw new Error("unreachable");if(e<=7)return this.bytes.every(t=>t===0)?"NIL":"VAR_0";if(e<=11)return"VAR_10";if(e<=13)return"VAR_110";if(e<=15)return this.bytes.every(t=>t===255)?"MAX":"VAR_RESERVED";throw new Error("unreachable")}getVersion(){return this.getVariant()==="VAR_10"?this.bytes[6]>>>4:void 0}clone(){return new n(this.bytes.slice(0))}equals(e){return this.compareTo(e)===0}compareTo(e){for(let t=0;t<16;t++){let s=this.bytes[t]-e.bytes[t];if(s!==0)return Math.sign(s)}return 0}},m=class{constructor(e){this.timestamp=0,this.counter=0,this.random=e??N()}generate(){return this.generateOrResetCore(Date.now(),1e4)}generateOrAbort(){return this.generateOrAbortCore(Date.now(),1e4)}generateOrResetCore(e,t){let s=this.generateOrAbortCore(e,t);return s===void 0&&(this.timestamp=0,s=this.generateOrAbortCore(e,t)),s}generateOrAbortCore(e,t){if(!Number.isInteger(e)||e<1||e>0xffffffffffff)throw new RangeError("`unixTsMs` must be a 48-bit positive integer");if(t<0||t>0xffffffffffff)throw new RangeError("`rollbackAllowance` out of reasonable range");if(e>this.timestamp)this.timestamp=e,this.resetCounter();else if(e+t>=this.timestamp)this.counter++,this.counter>4398046511103&&(this.timestamp++,this.resetCounter());else return;return y.fromFieldsV7(this.timestamp,Math.trunc(this.counter/2**30),this.counter&2**30-1,this.random.nextUint32())}resetCounter(){this.counter=this.random.nextUint32()*1024+(this.random.nextUint32()&1023)}generateV4(){let e=new Uint8Array(Uint32Array.of(this.random.nextUint32(),this.random.nextUint32(),this.random.nextUint32(),this.random.nextUint32()).buffer);return e[6]=64|e[6]>>>4,e[8]=128|e[8]>>>2,y.ofInner(e)}},N=()=>{if(typeof crypto<"u"&&typeof crypto.getRandomValues<"u")return new d;if(typeof UUIDV7_DENY_WEAK_RNG<"u"&&UUIDV7_DENY_WEAK_RNG)throw new Error("no cryptographically strong RNG available");return{nextUint32:()=>Math.trunc(Math.random()*65536)*65536+Math.trunc(Math.random()*65536)}},d=class{constructor(){this.buffer=new Uint32Array(8),this.cursor=65535}nextUint32(){return this.cursor>=this.buffer.length&&(crypto.getRandomValues(this.buffer),this.cursor=0),this.buffer[this.cursor++]}},p,b=()=>R().toString(),R=()=>(p||(p=new m)).generate();var l=require("@raycast/api");var U=async(n,e)=>{try{let t=await l.LocalStorage.getItem("uuidHistory");if(t||(t="[]"),typeof t!="string")return;let s=JSON.parse(t);s.push({uuid:n,timestamp:new Date,type:e}),await l.LocalStorage.setItem("uuidHistory",JSON.stringify(s))}catch{await(0,l.showToast)({style:l.Toast.Style.Failure,title:"Error saving history",message:"Failed to save history to local storage"})}};async function w(n,e,t=!1,s="uuidV4"){let i=Array.from(Array(e)).map(()=>{let r=n();return t?r.toUpperCase():r});for(let r of i)await U(r,s);return i}var I=1e4,O=async n=>{let{numberOfUUIDsToGenerate:e}=n.arguments,{upperCaseLetters:t,defaultAction:s}=(0,o.getPreferenceValues)();e||(e="1");try{let i=parseInt(e,10);if(isNaN(i))throw new Error("INVALID_NUMBER");if(i<=I){let r=await w(b,i,t,"uuidV7");s==="copy"?await o.Clipboard.copy(r.join(`\r
`)):s==="paste"&&await o.Clipboard.paste(r.join(`\r
`));let a=s==="copy"?"Copied":"Pasted",c=r.length>1?`${a} ${r.length} new UUIDs.`:`${a} new UUID: ${r}`;await(0,o.showHUD)(`\u2705 ${c}`)}else await(0,o.showToast)({style:o.Toast.Style.Failure,title:"Too many UUIDs requested.",message:`${i} exceeds maximum UUIDs of ${I}. Try a lower number.`})}catch(i){switch(i.message){case"INVALID_NUMBER":await(0,o.showToast)({style:o.Toast.Style.Failure,title:"Invalid number.",message:"An invalid number has been provided. Try an actual number."});break}}};
/*! Bundled license information:

uuidv7/dist/index.js:
  (**
   * uuidv7: An experimental implementation of the proposed UUID Version 7
   *
   * @license Apache-2.0
   * @copyright 2021-2023 LiosK
   * @packageDocumentation
   *)
*/
